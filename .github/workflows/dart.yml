name: iOS Signed Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-ios:
    name: üçè Build iOS (Signed)
    runs-on: macos-latest

    env:
      BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
      BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      DEVELOPMENT_TEAM: ${{ secrets.APPLE_TEAM_ID }} # Optional if using automatic provisioning

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: üß± Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      - name: üì¶ Install dependencies
        run: flutter pub get

      - name: üçé Install CocoaPods
        run: pod repo update
        working-directory: ios

      - name: üîê Install certificate and provisioning profile
        run: |
          echo "Setting up signing environment..."
          CERT_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Decode base64 secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERT_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # Create and unlock temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import certificate
          security import $CERT_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: üèóÔ∏è Build iOS app (signed)
        run: |
          flutter build ios --release

      - name: üì¶ Package .ipa file
        run: |
          mkdir Payload
          cp -r build/ios/iphoneos/Runner.app Payload/
          zip -qq -r -9 FlutterAppSigned.ipa Payload
        working-directory: build/ios/iphoneos

      - name: ‚¨ÜÔ∏è Upload .ipa as release artifact
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterAppSigned.ipa
          tag: v1.0
          overwrite: true
          body: "Signed iOS release build"

      - name: üßπ Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm -f ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
